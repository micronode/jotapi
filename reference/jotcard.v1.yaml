openapi: 3.0.0
info:
  title: JotCard
  version: '1.0'
  description: A resource profile API based on the vCard specification
  license:
    name: MIT
    url: 'https://raw.githubusercontent.com/micronode/jotapi/main/LICENSE'
  contact:
    name: Micronode
    url: 'https://micronode.com/jot'
    email: fortuna@micronode.com
servers:
  - url: '{protocol}://{host}/v1'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      host:
        default: api.example.com
    description: JotCard
paths:
  /groups:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/groupcard-list'
      operationId: get-groups
      parameters:
        - $ref: '#/components/parameters/filter'
    post:
      summary: ''
      operationId: create-group
      responses:
        '200':
          $ref: '#/components/responses/groupcard'
  '/group/{Uid}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/groupcard'
      operationId: get-group
      parameters:
        - $ref: '#/components/parameters/includeRevisions'
    parameters:
      - $ref: '#/components/parameters/Uid'
    put:
      summary: ''
      operationId: set-group
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/groupcard.v1.yaml
    patch:
      summary: ''
      operationId: update-group
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-group
      responses:
        '200':
          description: OK
  /cards:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/card-list'
      operationId: get-cards
      parameters:
        - $ref: '#/components/parameters/filter'
    post:
      summary: ''
      operationId: create-card
      responses:
        '200':
          $ref: '#/components/responses/card'
  '/card/{Uid}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/card'
      operationId: get-card
      parameters:
        - $ref: '#/components/parameters/includeRevisions'
    parameters:
      - $ref: '#/components/parameters/Uid'
    put:
      summary: ''
      operationId: set-card
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/card.v1.yaml
    patch:
      summary: ''
      operationId: update-card
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-card
      responses:
        '200':
          description: OK
components:
  schemas: {}
  parameters:
    Uid:
      name: Uid
      in: path
      required: true
      schema:
        type: string
      description: Unique identifier for a card or group
    includeRevisions:
      name: includeRevisions
      in: query
      required: false
      schema:
        type: string
      description: Include previous revisions of requested card or group
    filter:
      name: f
      in: query
      required: false
      schema:
        type: string
        example: 'uid in [''12345-0987'']'
      description: An ical4j filter expression
  responses:
    card:
      description: Resoure card
      content:
        application/json:
          schema:
            $ref: ../models/card.v1.yaml
          examples: {}
    groupcard:
      description: Resource group
      content:
        application/json:
          schema:
            $ref: ../models/groupcard.v1.yaml
          examples: {}
    card-list:
      description: A list of resource cards
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../models/card.v1.yaml
          examples: {}
    groupcard-list:
      description: A list of resource groups
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../models/groupcard.v1.yaml
          examples: {}
