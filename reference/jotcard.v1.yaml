openapi: 3.0.0
info:
  title: JotCard
  version: '1.0'
  description: A resource profile API based on the vCard specification
  license:
    name: MIT
    url: 'https://raw.githubusercontent.com/micronode/jotapi/main/LICENSE'
  contact:
    name: Micronode
    url: 'https://micronode.com/jot'
    email: fortuna@micronode.com
servers:
  - url: '{protocol}://{host}/v1'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      host:
        default: api.example.com
paths:
  /groups:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/groupcard-list'
      operationId: get-groups
      parameters:
        - $ref: '#/components/parameters/categories'
    post:
      summary: ''
      operationId: create-group
      responses:
        '200':
          $ref: '#/components/responses/groupcard'
  '/group/{Uid}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/groupcard'
      operationId: get-group
      parameters:
        - $ref: '#/components/parameters/includeRevisions'
    parameters:
      - name: Uid
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for a card or group
    put:
      summary: ''
      operationId: set-group
      responses:
        '200':
          description: OK
    patch:
      summary: ''
      operationId: update-group
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-group
      responses:
        '200':
          description: OK
  /cards:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/card-list'
      operationId: get-cards
      parameters:
        - $ref: '#/components/parameters/categories'
    post:
      summary: ''
      operationId: create-card
      responses:
        '200':
          $ref: '#/components/responses/card'
  '/card/{Uid}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/card'
      operationId: get-card
      parameters:
        - $ref: '#/components/parameters/includeRevisions'
    parameters:
      - $ref: '#/components/parameters/Uid'
    put:
      summary: ''
      operationId: set-card
      responses:
        '200':
          description: OK
    patch:
      summary: ''
      operationId: update-card
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-card
      responses:
        '200':
          description: OK
components:
  schemas: {}
  parameters:
    Uid:
      name: Uid
      in: path
      required: true
      schema:
        type: string
      description: Unique identifier for a card or group
    categories:
      name: categories
      in: query
      required: false
      schema:
        type: string
      description: List of categories to filter results
    includeRevisions:
      name: includeRevisions
      in: query
      required: false
      schema:
        type: string
      description: Include previous revisions of requested card or group
  responses:
    card:
      description: Resoure card
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                $ref: ../models/card.v1.yaml
          examples:
            example-1:
              value:
                id:
                  id: 'urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6'
                  fn:
                    - 'Mr. John Q. Public\, Esq.'
                  kind: individual
                  sources:
                    - 'ldap://ldap.example.com/cn=Babs%20Jensen,%20o=Babsco,%20c=US'
                  'n':
                    surnames: string
                    given: string
                    additional: string
                    prefixes: string
                    suffixes: string
                  nicknames:
                    - string
                  photos:
                    - 'http://www.example.com/pub/photos/jqpublic.gif'
                  bday: '2019-08-24'
                  anniversary: '2019-08-24'
                  gender:
                    sex: M
                    identity: string
                  adr:
                    - pobox: string
                      extended: string
                      street: string
                      locality: string
                      region: string
                      postalcode: string
                      country: string
                      label: string
                      geo: 'geo:12.3457,78.910'
                  tel: 'tel:+1-555-555-5555;ext=5555'
                  email: jqpublic@xyz.example.com
                  impp: 'xmpp:alice@example.com'
                  lang: fr
                  tz: Raleigh/North America
                  geo: 'geo:37.386013,-122.082932'
                  title: Research Scientist
                  role: Project Leader
                  logos: 'http://www.example.com/pub/logos/abccorp.jpg'
                  org:
                    - name: 'ABC\, Inc.'
                      ou:
                        - North American Division
                  related: 'urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6'
                  categories:
                    - 'INTERNET,IETF,INDUSTRY,INFORMATION TECHNOLOGY'
                  note:
                    - string
                  rev: '2019-08-24T14:15:22Z'
                  sound: 'CID:JOHNQPUBLIC.part8.19960229T080000.xyzMail@example.com'
                  url: 'http://example.org/restaurant.french/~chezchic.html'
                  key: 'http://www.example.com/keys/jdoe.cer'
                  fburl: 'http://www.example.com/busy/janedoe'
                  caladruri: 'mailto:janedoe@example.com'
                  caluri: 'http://cal.example.com/calA'
    groupcard:
      description: Resource group
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                $ref: ../models/groupcard.v1.yaml
          examples:
            example-1:
              value:
                id:
                  id: string
                  fn: string
                  members:
                    - 'http://example.com'
    card-list:
      description: A list of resource cards
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: array
                items:
                  $ref: ../models/card.v1.yaml
          examples:
            example-1:
              value:
                id:
                  - id: 'urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6'
                    fn:
                      - 'Mr. John Q. Public\, Esq.'
                    kind: individual
                    sources:
                      - 'ldap://ldap.example.com/cn=Babs%20Jensen,%20o=Babsco,%20c=US'
                    'n':
                      surnames: string
                      given: string
                      additional: string
                      prefixes: string
                      suffixes: string
                    nicknames:
                      - string
                    photos:
                      - 'http://www.example.com/pub/photos/jqpublic.gif'
                    bday: '2019-08-24'
                    anniversary: '2019-08-24'
                    gender:
                      sex: M
                      identity: string
                    adr:
                      - pobox: string
                        extended: string
                        street: string
                        locality: string
                        region: string
                        postalcode: string
                        country: string
                        label: string
                        geo: 'geo:12.3457,78.910'
                    tel: 'tel:+1-555-555-5555;ext=5555'
                    email: jqpublic@xyz.example.com
                    impp: 'xmpp:alice@example.com'
                    lang: fr
                    tz: Raleigh/North America
                    geo: 'geo:37.386013,-122.082932'
                    title: Research Scientist
                    role: Project Leader
                    logos: 'http://www.example.com/pub/logos/abccorp.jpg'
                    org:
                      - name: 'ABC\, Inc.'
                        ou:
                          - North American Division
                    related: 'urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6'
                    categories:
                      - 'INTERNET,IETF,INDUSTRY,INFORMATION TECHNOLOGY'
                    note:
                      - string
                    rev: '2019-08-24T14:15:22Z'
                    sound: 'CID:JOHNQPUBLIC.part8.19960229T080000.xyzMail@example.com'
                    url: 'http://example.org/restaurant.french/~chezchic.html'
                    key: 'http://www.example.com/keys/jdoe.cer'
                    fburl: 'http://www.example.com/busy/janedoe'
                    caladruri: 'mailto:janedoe@example.com'
                    caluri: 'http://cal.example.com/calA'
    groupcard-list:
      description: A list of resource groups
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: array
                items:
                  $ref: ../models/groupcard.v1.yaml
          examples:
            example-1:
              value:
                id:
                  - id: string
                    fn: string
                    members:
                      - 'http://example.com'
